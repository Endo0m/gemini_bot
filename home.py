from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import random
import google.generativeai as genai
import asyncio

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Gemini
GOOGLE_API_KEY = 'AIzaSyDRsYWDqHrAljAXtuAu4bDbg3aS-G0uLcA'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –Ω–æ–≤—ã–π –∫–ª—é—á API  # –í–∞—à API –∫–ª—é—á
genai.configure(api_key=GOOGLE_API_KEY)
model = genai.GenerativeModel('gemini-1.5-flash')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try:
    response = model.generate_content("–ü—Ä–∏–≤–µ—Ç")
    print("API Check - Success:", response.text)
except Exception as e:
    print("API Check - Error:", e)

# –°–ø–∏—Å–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ (–¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥)
GREETINGS = [
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å!",
    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
    "–•–∞–π! –ö–∞–∫ –∂–∏–∑–Ω—å?"
]

FUN_FACTS = [
    "–ú–µ–¥–æ–µ–¥—ã –∏–∑–≤–µ—Å—Ç–Ω—ã —Ç–µ–º, —á—Ç–æ –Ω–µ –±–æ—è—Ç—Å—è –Ω–∏–∫–æ–≥–æ, –¥–∞–∂–µ –ª—å–≤–æ–≤!",
    "–ö–æ–ª–∏–±—Ä–∏ - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ç–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ª–µ—Ç–∞—Ç—å –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä–µ–¥.",
    "–ú—É—Ä–∞–≤—å–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–ø—è—Ç!",
    "–°–µ—Ä–¥—Ü–µ —Å–∏–Ω–µ–≥–æ –∫–∏—Ç–∞ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –±–æ–ª—å—à–æ–µ, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –ø–ª–∞–≤–∞—Ç—å –ø–æ –µ–≥–æ –∞—Ä—Ç–µ—Ä–∏—è–º.",
    "–û–∫—Ç–æ–ø—É—Å—ã –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞!"
]

# –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"
GAME_STATE = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        ['ü§ñ Gemini Chat', 'üéÆ –ò–≥—Ä–∞—Ç—å'],
        ['üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç', '‚ùì –ü–æ–º–æ—â—å']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ Google Gemini! –Ø —É–º–µ—é:\n"
        "1. –û–±—â–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é Gemini\n"
        "2. –ò–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'\n"
        "3. –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã\n"
        "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/chat - –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å Gemini\n"
        "/play - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/fact - –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "/help - –ü–æ–º–æ—â—å",
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "–Ø —É–º–µ—é:\n"
        "ü§ñ –û–±—â–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Gemini - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–ª–∏ /chat\n"
        "üéÆ –ò–≥—Ä–∞—Ç—å –≤ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ' - –Ω–∞–∂–º–∏—Ç–µ '–ò–≥—Ä–∞—Ç—å' –∏–ª–∏ /play\n"
        "üé≤ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å —Ñ–∞–∫—Ç—ã - –Ω–∞–∂–º–∏—Ç–µ '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç' –∏–ª–∏ /fact\n"
        "‚ùì –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–º–æ—â—å - /help"
    )


async def play_game(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    GAME_STATE[user_id] = random.randint(1, 100)
    await update.message.reply_text(
        "–î–∞–≤–∞–π—Ç–µ –ø–æ–∏–≥—Ä–∞–µ–º –≤ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'!\n"
        "–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å!"
    )


async def random_fact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    fact = random.choice(FUN_FACTS)
    await update.message.reply_text(f"üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç: {fact}")


async def chat_with_gemini(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    user_message = update.message.text

    try:
        # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞
        response = model.generate_content(
            f"–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message}",
            generation_config=genai.types.GenerationConfig(
                temperature=0.7,
                max_output_tokens=800,
            )
        )

        await update.message.reply_text(response.text)

    except Exception as e:
        print(f"Detailed error in chat_with_gemini: {str(e)}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        await update.message.reply_text(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
        )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_message = update.message.text.lower()
    user_id = update.effective_user.id

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    if user_message == "üéÆ –∏–≥—Ä–∞—Ç—å":
        await play_game(update, context)
        return
    elif user_message == "üé≤ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç":
        await random_fact(update, context)
        return
    elif user_message == "‚ùì –ø–æ–º–æ—â—å":
        await help_command(update, context)
        return
    elif user_message == "ü§ñ gemini chat":
        await update.message.reply_text("–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å —Å –ø–æ–º–æ—â—å—é Gemini. –û —á—ë–º –ø–æ–≥–æ–≤–æ—Ä–∏–º?")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–≥—Ä–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∏–≥—Ä—É
    if user_id in GAME_STATE:
        try:
            guess = int(user_message)
            target = GAME_STATE[user_id]

            if guess == target:
                del GAME_STATE[user_id]
                await update.message.reply_text("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!")
            elif guess < target:
                await update.message.reply_text("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ!")
            else:
                await update.message.reply_text("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ!")
            return
        except ValueError:
            pass

    # –ï—Å–ª–∏ –Ω–µ –∏–≥—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º Gemini
    await chat_with_gemini(update, context)


def main() -> None:
    # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    token = "7818121330:AAFxve8Yg29gsFdRnCb7sK96EvfeBm9FEDQ"

    application = ApplicationBuilder().token(token).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("play", play_game))
    application.add_handler(CommandHandler("fact", random_fact))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()


if __name__ == "__main__":
    main()